@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using intapscamis.camis.domain.Report
@model intapscamis.camis.domain.Farms.Models.ReportResponseModel
@{
    var i = 1;
    var type = (int)Model.Request.SelectedReportType;
    var lookup = Model.LocationLookup;


}

<table class="table table-striped jambo_table bulk_action" id="tclick">
    <thead>

        <tr class="headings">
            <th class="column-title">No</th>
            <th class="column-title">@Model.AddressType</th>
            <th class="column-title numberValue">Number Of Active Farms</th>
            <th class="column-title numberValue">Number of Undeveoped Farms </th>
            <th class="column-title numberValue">Number of Inactive Farms</th>


        </tr>

    </thead>
    <tbody>
        @foreach (var item in Model.InvestmentStatusSummary)
        {

        <tr>

            <td class="column-title">@(i++)</td>
            <td>
            @if (lookup.ContainsKey(item.location))
            {
                <p> @lookup[item.location] (@item.location)  </p>
            }
            else
            {
                <p> @item.location </p>
            }
                </td>
            <td class="column-title numberValue">@item.activeFarms</td>
            <td class="column-title numberValue">@(item.totalNoOfFarms - item.developedFarms)</td>
            <td class="column-title numberValue">@(item.totalNoOfFarms - item.activeFarms)</td>

        </tr>
        }
        @if(Model.InvestmentStatusSummary.Count() > 0){
            var item2 = Model.InvestmentStatusSummary;
            <tr>

                <td class="column-title"></td>
                <td class="column-title">Total</td>
                <td class="column-title numberValue">@item2.Sum(m => m.activeFarms)</td>
                <td class="column-title numberValue">@(item2.Sum(m => m.totalNoOfFarms) - item2.Sum(m => m.developedFarms))</td>
                <td class="column-title numberValue">@(item2.Sum(m => m.totalNoOfFarms) - item2.Sum(m => m.activeFarms))</td>

            </tr>
        }
    </tbody>
</table>